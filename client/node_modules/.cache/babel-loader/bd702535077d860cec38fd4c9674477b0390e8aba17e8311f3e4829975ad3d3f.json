{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./App.css';import Lobby from'./components/Lobby';import GuessPanel from'./components/GuessPanel';import HelpModal from'./components/HelpModal';import LeaderboardModal from'./components/LeaderboardModal';import ConfettiEffect from'./components/ConfettiEffect';import GameInfo from'./components/GameInfo';import PreviousGuesses from'./components/PreviousGuesses';import{generateCode}from'./utils/generateCode';import{generateFeedback}from'./utils/generateFeedback';import{arraysEqual}from'./utils/arraysEqual';import{formatTime}from'./utils/formatTime';import{playSound}from'./utils/playSound';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DEFAULT_COLORS=[{name:'red',hex:'#e53935',pattern:'R'},{name:'blue',hex:'#1e88e5',pattern:'B'},{name:'green',hex:'#43a047',pattern:'G'},{name:'purple',hex:'#8e24aa',pattern:'P'},{name:'yellow',hex:'#fbc02d',pattern:'Y'},{name:'orange',hex:'#fb8c00',pattern:'O'},{name:'pink',hex:'#ff69b4',pattern:'Pi'},// lighter pink\n{name:'brown',hex:'#6d4c41',pattern:'Br'}];const minCodeLength=4;const maxCodeLength=7;function App(){const[gameState,setGameState]=useState('lobby');const[playerName,setPlayerName]=useState('');const[codeLength,setCodeLength]=useState(4);const[difficulty,setDifficulty]=useState('easy');const[colorBlindMode,setColorBlindMode]=useState(false);const[darkMode,setDarkMode]=useState(false);const[selectedColors,setSelectedColors]=useState(DEFAULT_COLORS.slice(0,6));const[currentGuess,setCurrentGuess]=useState(Array(4).fill(''));const[targetCode,setTargetCode]=useState([]);const[latestFeedback,setLatestFeedback]=useState(null);const[attempts,setAttempts]=useState(0);const[guesses,setGuesses]=useState([]);const[showHelp,setShowHelp]=useState(false);const[showLeaderboard,setShowLeaderboard]=useState(false);const[showConfetti,setShowConfetti]=useState(false);const[timer,setTimer]=useState(0);const[timerActive,setTimerActive]=useState(false);const[hintUsed,setHintUsed]=useState(false);const[hint,setHint]=useState(null);const[leaderboard,setLeaderboard]=useState(()=>JSON.parse(localStorage.getItem('leaderboard')||'[]'));const[theme,setTheme]=useState('default');const timerRef=useRef();useEffect(()=>{if(timerActive){timerRef.current=setInterval(()=>setTimer(t=>t+1),1000);}else{clearInterval(timerRef.current);}return()=>clearInterval(timerRef.current);},[timerActive]);useEffect(()=>{document.body.className=darkMode?'dark-mode':'';},[darkMode]);const handleStartGame=name=>{setPlayerName(name);setGameState('setup');};const handleSetup=()=>{const code=generateCode({codeLength,colors:selectedColors.map(c=>c.name),difficulty});setTargetCode(code);setCurrentGuess(Array(codeLength).fill(''));setLatestFeedback(null);setAttempts(0);setGuesses([]);setHintUsed(false);setHint(null);setTimer(0);setTimerActive(true);setGameState('playing');setShowConfetti(false);};const submitGuess=guessArr=>{if(guessArr.length!==codeLength||guessArr.some(c=>!c))return;const feedback=generateFeedback(guessArr,targetCode);setLatestFeedback(feedback);setAttempts(prev=>prev+1);setGuesses(prev=>[...prev,{code:[...guessArr],feedback}]);playSound(feedback.correct===codeLength?'win':'guess');if(arraysEqual(guessArr,targetCode)){setGameState('finished');setTimerActive(false);setShowConfetti(true);const entry={name:playerName,attempts:attempts+1,time:timer,codeLength,difficulty,date:new Date().toLocaleString()};const updated=[...leaderboard,entry].sort((a,b)=>a.attempts-b.attempts||a.time-b.time).slice(0,10);setLeaderboard(updated);localStorage.setItem('leaderboard',JSON.stringify(updated));}setCurrentGuess(Array(codeLength).fill(''));};const resetGame=()=>{setGameState('lobby');setPlayerName('');setCurrentGuess(Array(codeLength).fill(''));setTargetCode([]);setLatestFeedback(null);setAttempts(0);setGuesses([]);setCodeLength(4);setDifficulty('easy');setTimer(0);setTimerActive(false);setHintUsed(false);setHint(null);setShowConfetti(false);};const handleHint=()=>{if(hintUsed)return;for(let i=0;i<codeLength;i++){if(currentGuess[i]!==targetCode[i]){setHint({pos:i,color:targetCode[i]});setHintUsed(true);break;}}};const handleColorToggle=color=>{setSelectedColors(prev=>{if(prev.find(c=>c.name===color.name)){if(prev.length<=codeLength)return prev;return prev.filter(c=>c.name!==color.name);}else{return[...prev,color];}});};const handleThemeChange=e=>{setTheme(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:`App${darkMode?' dark':''} theme-${theme}`,children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDD12 Block-Lock\"}),/*#__PURE__*/_jsx(\"button\",{className:\"help-btn\",onClick:()=>setShowHelp(true),\"aria-label\":\"Show help\",children:\"?\"}),/*#__PURE__*/_jsx(\"button\",{className:\"leaderboard-btn\",onClick:()=>setShowLeaderboard(true),\"aria-label\":\"Show leaderboard\",children:\"\\uD83C\\uDFC6\"}),/*#__PURE__*/_jsx(\"button\",{className:\"dark-btn\",onClick:()=>setDarkMode(d=>!d),\"aria-label\":\"Toggle dark mode\",children:darkMode?'🌙':'☀️'}),/*#__PURE__*/_jsx(\"button\",{className:\"cb-btn\",onClick:()=>setColorBlindMode(cb=>!cb),\"aria-label\":\"Toggle color-blind mode\",children:colorBlindMode?'👁️‍🗨️':'👁️'}),/*#__PURE__*/_jsxs(\"select\",{value:theme,onChange:handleThemeChange,style:{marginLeft:12},children:[/*#__PURE__*/_jsx(\"option\",{value:\"default\",children:\"Default Theme\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pastel\",children:\"Pastel\"}),/*#__PURE__*/_jsx(\"option\",{value:\"high-contrast\",children:\"High Contrast\"})]})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"App-main\",children:[gameState==='lobby'&&/*#__PURE__*/_jsx(Lobby,{onStartGame:handleStartGame}),gameState==='setup'&&/*#__PURE__*/_jsxs(\"div\",{className:\"setup-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Game Setup\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Code Length:\",/*#__PURE__*/_jsx(\"select\",{value:codeLength,onChange:e=>{setCodeLength(Number(e.target.value));setCurrentGuess(Array(Number(e.target.value)).fill(''));},children:Array.from({length:maxCodeLength-minCodeLength+1},(_,i)=>minCodeLength+i).map(len=>/*#__PURE__*/_jsx(\"option\",{value:len,children:len},len))})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Difficulty:\",/*#__PURE__*/_jsxs(\"select\",{value:difficulty,onChange:e=>setDifficulty(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"Easy (no duplicates)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"Hard (duplicates allowed)\"})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Color Set:\",/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexWrap:'wrap',margin:'0.5em 0'},children:DEFAULT_COLORS.map(color=>/*#__PURE__*/_jsx(\"span\",{className:\"color-peg\",style:{background:color.hex,border:selectedColors.find(c=>c.name===color.name)?'2px solid #444':'2px dashed #aaa',margin:'0 5px 5px 0',width:32,height:32,borderRadius:4,display:'inline-block',verticalAlign:'middle',position:'relative',opacity:selectedColors.find(c=>c.name===color.name)?1:0.3,cursor:'pointer'},title:color.name,tabIndex:0,\"aria-label\":color.name,onClick:()=>handleColorToggle(color),onKeyDown:e=>{if(e.key==='Enter'||e.key===' ')handleColorToggle(color);},children:colorBlindMode&&/*#__PURE__*/_jsx(\"span\",{className:\"peg-pattern\",style:{position:'absolute',top:6,left:10,fontSize:13,color:'#fff',textShadow:'0 0 2px #000'},children:color.pattern})},color.name))}),/*#__PURE__*/_jsx(\"small\",{children:\"Click to select/deselect. At least as many as code length must be selected.\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSetup,disabled:selectedColors.length<codeLength,className:\"start-game-btn\",children:\"Start Game\"})]}),gameState==='playing'&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsx(GameInfo,{playerName:playerName,attempts:attempts,codeLength:codeLength,difficulty:difficulty,timer:timer,formatTime:formatTime,onHint:handleHint,hintUsed:hintUsed,hint:hint}),/*#__PURE__*/_jsx(GuessPanel,{currentGuess:currentGuess,onGuessChange:setCurrentGuess,onSubmitGuess:submitGuess,colors:selectedColors,codeLength:codeLength,colorBlindMode:colorBlindMode,easyMode:difficulty==='easy',guesses:guesses}),latestFeedback&&/*#__PURE__*/_jsxs(\"div\",{className:\"guess-feedback\",style:{marginTop:10,transition:'all 0.3s'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Feedback:\"}),\" \",latestFeedback.correct,\" correct, \",latestFeedback.wrongPosition,\" misplaced\"]})]}),gameState==='finished'&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-finished\",children:[showConfetti&&/*#__PURE__*/_jsx(ConfettiEffect,{}),/*#__PURE__*/_jsx(PreviousGuesses,{guesses:guesses,selectedColors:selectedColors,colorBlindMode:colorBlindMode}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\uD83C\\uDF89 Congratulations, \",playerName,\"!\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"You cracked the code in \",attempts,\" attempts and \",formatTime(timer),\"!\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"The code was:\",' ',/*#__PURE__*/_jsx(\"span\",{children:targetCode.map((color,idx)=>{const colorObj=selectedColors.find(c=>c.name===color);return/*#__PURE__*/_jsx(\"span\",{className:\"color-peg\",style:{background:colorObj?colorObj.hex:'#ccc',width:32,height:32,borderRadius:4,margin:'0 5px',border:'2px solid #444',display:'inline-block',verticalAlign:'middle',position:'relative'},title:color,children:colorBlindMode&&colorObj&&/*#__PURE__*/_jsx(\"span\",{style:{position:'absolute',top:6,left:10,fontSize:13,color:'#fff',textShadow:'0 0 2px #000'},children:colorObj.pattern})},idx);})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,className:\"play-again-btn\",children:\"Play Again\"})]})]}),showHelp&&/*#__PURE__*/_jsx(HelpModal,{onClose:()=>setShowHelp(false)}),showLeaderboard&&/*#__PURE__*/_jsx(LeaderboardModal,{leaderboard:leaderboard,onClose:()=>setShowLeaderboard(false)})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","Lobby","GuessPanel","HelpModal","LeaderboardModal","ConfettiEffect","GameInfo","PreviousGuesses","generateCode","generateFeedback","arraysEqual","formatTime","playSound","jsx","_jsx","jsxs","_jsxs","DEFAULT_COLORS","name","hex","pattern","minCodeLength","maxCodeLength","App","gameState","setGameState","playerName","setPlayerName","codeLength","setCodeLength","difficulty","setDifficulty","colorBlindMode","setColorBlindMode","darkMode","setDarkMode","selectedColors","setSelectedColors","slice","currentGuess","setCurrentGuess","Array","fill","targetCode","setTargetCode","latestFeedback","setLatestFeedback","attempts","setAttempts","guesses","setGuesses","showHelp","setShowHelp","showLeaderboard","setShowLeaderboard","showConfetti","setShowConfetti","timer","setTimer","timerActive","setTimerActive","hintUsed","setHintUsed","hint","setHint","leaderboard","setLeaderboard","JSON","parse","localStorage","getItem","theme","setTheme","timerRef","current","setInterval","t","clearInterval","document","body","className","handleStartGame","handleSetup","code","colors","map","c","submitGuess","guessArr","length","some","feedback","prev","correct","entry","time","date","Date","toLocaleString","updated","sort","a","b","setItem","stringify","resetGame","handleHint","i","pos","color","handleColorToggle","find","filter","handleThemeChange","e","target","value","children","onClick","d","cb","onChange","style","marginLeft","onStartGame","Number","from","_","len","display","flexWrap","margin","background","border","width","height","borderRadius","verticalAlign","position","opacity","cursor","title","tabIndex","onKeyDown","key","top","left","fontSize","textShadow","disabled","onHint","onGuessChange","onSubmitGuess","easyMode","marginTop","transition","wrongPosition","idx","colorObj","onClose"],"sources":["C:/Users/Beej/Documents/Block-Lock/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport Lobby from './components/Lobby';\r\nimport GuessPanel from './components/GuessPanel';\r\nimport HelpModal from './components/HelpModal';\r\nimport LeaderboardModal from './components/LeaderboardModal';\r\nimport ConfettiEffect from './components/ConfettiEffect';\r\nimport GameInfo from './components/GameInfo';\r\nimport PreviousGuesses from './components/PreviousGuesses';\r\nimport { generateCode } from './utils/generateCode';\r\nimport { generateFeedback } from './utils/generateFeedback';\r\nimport { arraysEqual } from './utils/arraysEqual';\r\nimport { formatTime } from './utils/formatTime';\r\nimport { playSound } from './utils/playSound';\r\n\r\nconst DEFAULT_COLORS = [\r\n  { name: 'red', hex: '#e53935', pattern: 'R' },\r\n  { name: 'blue', hex: '#1e88e5', pattern: 'B' },\r\n  { name: 'green', hex: '#43a047', pattern: 'G' },\r\n  { name: 'purple', hex: '#8e24aa', pattern: 'P' },\r\n  { name: 'yellow', hex: '#fbc02d', pattern: 'Y' },\r\n  { name: 'orange', hex: '#fb8c00', pattern: 'O' },\r\n  { name: 'pink', hex: '#ff69b4', pattern: 'Pi' }, // lighter pink\r\n  { name: 'brown', hex: '#6d4c41', pattern: 'Br' }\r\n];\r\n\r\nconst minCodeLength = 4;\r\nconst maxCodeLength = 7;\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState('lobby');\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [codeLength, setCodeLength] = useState(4);\r\n  const [difficulty, setDifficulty] = useState('easy');\r\n  const [colorBlindMode, setColorBlindMode] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [selectedColors, setSelectedColors] = useState(DEFAULT_COLORS.slice(0, 6));\r\n  const [currentGuess, setCurrentGuess] = useState(Array(4).fill(''));\r\n  const [targetCode, setTargetCode] = useState([]);\r\n  const [latestFeedback, setLatestFeedback] = useState(null);\r\n  const [attempts, setAttempts] = useState(0);\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [showHelp, setShowHelp] = useState(false);\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n  const [timerActive, setTimerActive] = useState(false);\r\n  const [hintUsed, setHintUsed] = useState(false);\r\n  const [hint, setHint] = useState(null);\r\n  const [leaderboard, setLeaderboard] = useState(() =>\r\n    JSON.parse(localStorage.getItem('leaderboard') || '[]')\r\n  );\r\n  const [theme, setTheme] = useState('default');\r\n  const timerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (timerActive) {\r\n      timerRef.current = setInterval(() => setTimer(t => t + 1), 1000);\r\n    } else {\r\n      clearInterval(timerRef.current);\r\n    }\r\n    return () => clearInterval(timerRef.current);\r\n  }, [timerActive]);\r\n\r\n  useEffect(() => {\r\n    document.body.className = darkMode ? 'dark-mode' : '';\r\n  }, [darkMode]);\r\n\r\n  const handleStartGame = (name) => {\r\n    setPlayerName(name);\r\n    setGameState('setup');\r\n  };\r\n\r\n  const handleSetup = () => {\r\n    const code = generateCode({ codeLength, colors: selectedColors.map(c => c.name), difficulty });\r\n    setTargetCode(code);\r\n    setCurrentGuess(Array(codeLength).fill(''));\r\n    setLatestFeedback(null);\r\n    setAttempts(0);\r\n    setGuesses([]);\r\n    setHintUsed(false);\r\n    setHint(null);\r\n    setTimer(0);\r\n    setTimerActive(true);\r\n    setGameState('playing');\r\n    setShowConfetti(false);\r\n  };\r\n\r\n  const submitGuess = (guessArr) => {\r\n    if (guessArr.length !== codeLength || guessArr.some(c => !c)) return;\r\n    const feedback = generateFeedback(guessArr, targetCode);\r\n    setLatestFeedback(feedback);\r\n    setAttempts(prev => prev + 1);\r\n    setGuesses(prev => [\r\n      ...prev,\r\n      { code: [...guessArr], feedback }\r\n    ]);\r\n    playSound(feedback.correct === codeLength ? 'win' : 'guess');\r\n\r\n    if (arraysEqual(guessArr, targetCode)) {\r\n      setGameState('finished');\r\n      setTimerActive(false);\r\n      setShowConfetti(true);\r\n      const entry = {\r\n        name: playerName,\r\n        attempts: attempts + 1,\r\n        time: timer,\r\n        codeLength,\r\n        difficulty,\r\n        date: new Date().toLocaleString()\r\n      };\r\n      const updated = [...leaderboard, entry].sort((a, b) => a.attempts - b.attempts || a.time - b.time).slice(0, 10);\r\n      setLeaderboard(updated);\r\n      localStorage.setItem('leaderboard', JSON.stringify(updated));\r\n    }\r\n    setCurrentGuess(Array(codeLength).fill(''));\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setGameState('lobby');\r\n    setPlayerName('');\r\n    setCurrentGuess(Array(codeLength).fill(''));\r\n    setTargetCode([]);\r\n    setLatestFeedback(null);\r\n    setAttempts(0);\r\n    setGuesses([]);\r\n    setCodeLength(4);\r\n    setDifficulty('easy');\r\n    setTimer(0);\r\n    setTimerActive(false);\r\n    setHintUsed(false);\r\n    setHint(null);\r\n    setShowConfetti(false);\r\n  };\r\n\r\n  const handleHint = () => {\r\n    if (hintUsed) return;\r\n    for (let i = 0; i < codeLength; i++) {\r\n      if (currentGuess[i] !== targetCode[i]) {\r\n        setHint({ pos: i, color: targetCode[i] });\r\n        setHintUsed(true);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleColorToggle = (color) => {\r\n    setSelectedColors(prev => {\r\n      if (prev.find(c => c.name === color.name)) {\r\n        if (prev.length <= codeLength) return prev;\r\n        return prev.filter(c => c.name !== color.name);\r\n      } else {\r\n        return [...prev, color];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleThemeChange = (e) => {\r\n    setTheme(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={`App${darkMode ? ' dark' : ''} theme-${theme}`}>\r\n      <header className=\"App-header\">\r\n        <h1>🔒 Block-Lock</h1>\r\n        <button className=\"help-btn\" onClick={() => setShowHelp(true)} aria-label=\"Show help\">?</button>\r\n        <button className=\"leaderboard-btn\" onClick={() => setShowLeaderboard(true)} aria-label=\"Show leaderboard\">🏆</button>\r\n        <button className=\"dark-btn\" onClick={() => setDarkMode(d => !d)} aria-label=\"Toggle dark mode\">\r\n          {darkMode ? '🌙' : '☀️'}\r\n        </button>\r\n        <button className=\"cb-btn\" onClick={() => setColorBlindMode(cb => !cb)} aria-label=\"Toggle color-blind mode\">\r\n          {colorBlindMode ? '👁️‍🗨️' : '👁️'}\r\n        </button>\r\n        <select value={theme} onChange={handleThemeChange} style={{ marginLeft: 12 }}>\r\n          <option value=\"default\">Default Theme</option>\r\n          <option value=\"pastel\">Pastel</option>\r\n          <option value=\"high-contrast\">High Contrast</option>\r\n        </select>\r\n      </header>\r\n\r\n      <main className=\"App-main\">\r\n        {gameState === 'lobby' && (\r\n          <Lobby onStartGame={handleStartGame} />\r\n        )}\r\n\r\n        {gameState === 'setup' && (\r\n          <div className=\"setup-panel\">\r\n            <h2>Game Setup</h2>\r\n            <label>\r\n              Code Length:\r\n              <select\r\n                value={codeLength}\r\n                onChange={e => {\r\n                  setCodeLength(Number(e.target.value));\r\n                  setCurrentGuess(Array(Number(e.target.value)).fill(''));\r\n                }}\r\n              >\r\n                {Array.from({ length: maxCodeLength - minCodeLength + 1 }, (_, i) =>\r\n                  minCodeLength + i\r\n                ).map(len => (\r\n                  <option key={len} value={len}>{len}</option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Difficulty:\r\n              <select\r\n                value={difficulty}\r\n                onChange={e => setDifficulty(e.target.value)}\r\n              >\r\n                <option value=\"easy\">Easy (no duplicates)</option>\r\n                <option value=\"hard\">Hard (duplicates allowed)</option>\r\n              </select>\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Color Set:\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', margin: '0.5em 0' }}>\r\n                {DEFAULT_COLORS.map(color => (\r\n                  <span\r\n                    key={color.name}\r\n                    className=\"color-peg\"\r\n                    style={{\r\n                      background: color.hex,\r\n                      border: selectedColors.find(c => c.name === color.name) ? '2px solid #444' : '2px dashed #aaa',\r\n                      margin: '0 5px 5px 0',\r\n                      width: 32,\r\n                      height: 32,\r\n                      borderRadius: 4,\r\n                      display: 'inline-block',\r\n                      verticalAlign: 'middle',\r\n                      position: 'relative',\r\n                      opacity: selectedColors.find(c => c.name === color.name) ? 1 : 0.3,\r\n                      cursor: 'pointer'\r\n                    }}\r\n                    title={color.name}\r\n                    tabIndex={0}\r\n                    aria-label={color.name}\r\n                    onClick={() => handleColorToggle(color)}\r\n                    onKeyDown={e => { if (e.key === 'Enter' || e.key === ' ') handleColorToggle(color); }}\r\n                  >\r\n                    {colorBlindMode && (\r\n                      <span className=\"peg-pattern\" style={{\r\n                        position: 'absolute',\r\n                        top: 6, left: 10,\r\n                        fontSize: 13,\r\n                        color: '#fff',\r\n                        textShadow: '0 0 2px #000'\r\n                      }}>{color.pattern}</span>\r\n                    )}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <small>Click to select/deselect. At least as many as code length must be selected.</small>\r\n            </label>\r\n            <br />\r\n            <button\r\n              onClick={handleSetup}\r\n              disabled={selectedColors.length < codeLength}\r\n              className=\"start-game-btn\"\r\n            >Start Game</button>\r\n          </div>\r\n        )}\r\n\r\n        {gameState === 'playing' && (\r\n          <div className=\"game-container\">\r\n            <GameInfo\r\n              playerName={playerName}\r\n              attempts={attempts}\r\n              codeLength={codeLength}\r\n              difficulty={difficulty}\r\n              timer={timer}\r\n              formatTime={formatTime}\r\n              onHint={handleHint}\r\n              hintUsed={hintUsed}\r\n              hint={hint}\r\n            />\r\n            <GuessPanel\r\n              currentGuess={currentGuess}\r\n              onGuessChange={setCurrentGuess}\r\n              onSubmitGuess={submitGuess}\r\n              colors={selectedColors}\r\n              codeLength={codeLength}\r\n              colorBlindMode={colorBlindMode}\r\n              easyMode={difficulty === 'easy'}\r\n              guesses={guesses}\r\n            />\r\n            {latestFeedback && (\r\n              <div className=\"guess-feedback\" style={{ marginTop: 10, transition: 'all 0.3s' }}>\r\n                <strong>Feedback:</strong> {latestFeedback.correct} correct, {latestFeedback.wrongPosition} misplaced\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {gameState === 'finished' && (\r\n          <div className=\"game-finished\">\r\n            {showConfetti && <ConfettiEffect />}\r\n            <PreviousGuesses\r\n              guesses={guesses}\r\n              selectedColors={selectedColors}\r\n              colorBlindMode={colorBlindMode}\r\n            />\r\n            <h2>🎉 Congratulations, {playerName}!</h2>\r\n            <p>You cracked the code in {attempts} attempts and {formatTime(timer)}!</p>\r\n            <p>\r\n              The code was:{' '}\r\n              <span>\r\n                {targetCode.map((color, idx) => {\r\n                  const colorObj = selectedColors.find(c => c.name === color);\r\n                  return (\r\n                    <span\r\n                      key={idx}\r\n                      className=\"color-peg\"\r\n                      style={{\r\n                        background: colorObj ? colorObj.hex : '#ccc',\r\n                        width: 32,\r\n                        height: 32,\r\n                        borderRadius: 4,\r\n                        margin: '0 5px',\r\n                        border: '2px solid #444',\r\n                        display: 'inline-block',\r\n                        verticalAlign: 'middle',\r\n                        position: 'relative'\r\n                      }}\r\n                      title={color}\r\n                    >\r\n                      {colorBlindMode && colorObj && (\r\n                        <span style={{\r\n                          position: 'absolute',\r\n                          top: 6, left: 10,\r\n                          fontSize: 13,\r\n                          color: '#fff',\r\n                          textShadow: '0 0 2px #000'\r\n                        }}>{colorObj.pattern}</span>\r\n                      )}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </span>\r\n            </p>\r\n            <button onClick={resetGame} className=\"play-again-btn\">\r\n              Play Again\r\n            </button>\r\n          </div>\r\n        )}\r\n      </main>\r\n\r\n      {showHelp && <HelpModal onClose={() => setShowHelp(false)} />}\r\n      {showLeaderboard && <LeaderboardModal leaderboard={leaderboard} onClose={() => setShowLeaderboard(false)} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,WAAW,CAClB,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAC5D,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,OAASC,YAAY,KAAQ,sBAAsB,CACnD,OAASC,gBAAgB,KAAQ,0BAA0B,CAC3D,OAASC,WAAW,KAAQ,qBAAqB,CACjD,OAASC,UAAU,KAAQ,oBAAoB,CAC/C,OAASC,SAAS,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,cAAc,CAAG,CACrB,CAAEC,IAAI,CAAE,KAAK,CAAEC,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,GAAI,CAAC,CAC7C,CAAEF,IAAI,CAAE,MAAM,CAAEC,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,GAAI,CAAC,CAC9C,CAAEF,IAAI,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,GAAI,CAAC,CAC/C,CAAEF,IAAI,CAAE,QAAQ,CAAEC,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,GAAI,CAAC,CAChD,CAAEF,IAAI,CAAE,QAAQ,CAAEC,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,GAAI,CAAC,CAChD,CAAEF,IAAI,CAAE,QAAQ,CAAEC,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,GAAI,CAAC,CAChD,CAAEF,IAAI,CAAE,MAAM,CAAEC,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,IAAK,CAAC,CAAE;AACjD,CAAEF,IAAI,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,IAAK,CAAC,CACjD,CAED,KAAM,CAAAC,aAAa,CAAG,CAAC,CACvB,KAAM,CAAAC,aAAa,CAAG,CAAC,CAEvB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAG3B,QAAQ,CAAC,OAAO,CAAC,CACnD,KAAM,CAAC4B,UAAU,CAAEC,aAAa,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC8B,UAAU,CAAEC,aAAa,CAAC,CAAG/B,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAACgC,UAAU,CAAEC,aAAa,CAAC,CAAGjC,QAAQ,CAAC,MAAM,CAAC,CACpD,KAAM,CAACkC,cAAc,CAAEC,iBAAiB,CAAC,CAAGnC,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAACoC,QAAQ,CAAEC,WAAW,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACsC,cAAc,CAAEC,iBAAiB,CAAC,CAAGvC,QAAQ,CAACmB,cAAc,CAACqB,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAChF,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAG1C,QAAQ,CAAC2C,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,CACnE,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAG9C,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC+C,cAAc,CAAEC,iBAAiB,CAAC,CAAGhD,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACiD,QAAQ,CAAEC,WAAW,CAAC,CAAGlD,QAAQ,CAAC,CAAC,CAAC,CAC3C,KAAM,CAACmD,OAAO,CAAEC,UAAU,CAAC,CAAGpD,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACqD,QAAQ,CAAEC,WAAW,CAAC,CAAGtD,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACuD,eAAe,CAAEC,kBAAkB,CAAC,CAAGxD,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACyD,YAAY,CAAEC,eAAe,CAAC,CAAG1D,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAC2D,KAAK,CAAEC,QAAQ,CAAC,CAAG5D,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAAC6D,WAAW,CAAEC,cAAc,CAAC,CAAG9D,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAC+D,QAAQ,CAAEC,WAAW,CAAC,CAAGhE,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACiE,IAAI,CAAEC,OAAO,CAAC,CAAGlE,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACmE,WAAW,CAAEC,cAAc,CAAC,CAAGpE,QAAQ,CAAC,IAC7CqE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAI,IAAI,CACxD,CAAC,CACD,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAG1E,QAAQ,CAAC,SAAS,CAAC,CAC7C,KAAM,CAAA2E,QAAQ,CAAGzE,MAAM,CAAC,CAAC,CAEzBD,SAAS,CAAC,IAAM,CACd,GAAI4D,WAAW,CAAE,CACfc,QAAQ,CAACC,OAAO,CAAGC,WAAW,CAAC,IAAMjB,QAAQ,CAACkB,CAAC,EAAIA,CAAC,CAAG,CAAC,CAAC,CAAE,IAAI,CAAC,CAClE,CAAC,IAAM,CACLC,aAAa,CAACJ,QAAQ,CAACC,OAAO,CAAC,CACjC,CACA,MAAO,IAAMG,aAAa,CAACJ,QAAQ,CAACC,OAAO,CAAC,CAC9C,CAAC,CAAE,CAACf,WAAW,CAAC,CAAC,CAEjB5D,SAAS,CAAC,IAAM,CACd+E,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAG9C,QAAQ,CAAG,WAAW,CAAG,EAAE,CACvD,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAA+C,eAAe,CAAI/D,IAAI,EAAK,CAChCS,aAAa,CAACT,IAAI,CAAC,CACnBO,YAAY,CAAC,OAAO,CAAC,CACvB,CAAC,CAED,KAAM,CAAAyD,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,IAAI,CAAG3E,YAAY,CAAC,CAAEoB,UAAU,CAAEwD,MAAM,CAAEhD,cAAc,CAACiD,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACpE,IAAI,CAAC,CAAEY,UAAW,CAAC,CAAC,CAC9Fc,aAAa,CAACuC,IAAI,CAAC,CACnB3C,eAAe,CAACC,KAAK,CAACb,UAAU,CAAC,CAACc,IAAI,CAAC,EAAE,CAAC,CAAC,CAC3CI,iBAAiB,CAAC,IAAI,CAAC,CACvBE,WAAW,CAAC,CAAC,CAAC,CACdE,UAAU,CAAC,EAAE,CAAC,CACdY,WAAW,CAAC,KAAK,CAAC,CAClBE,OAAO,CAAC,IAAI,CAAC,CACbN,QAAQ,CAAC,CAAC,CAAC,CACXE,cAAc,CAAC,IAAI,CAAC,CACpBnC,YAAY,CAAC,SAAS,CAAC,CACvB+B,eAAe,CAAC,KAAK,CAAC,CACxB,CAAC,CAED,KAAM,CAAA+B,WAAW,CAAIC,QAAQ,EAAK,CAChC,GAAIA,QAAQ,CAACC,MAAM,GAAK7D,UAAU,EAAI4D,QAAQ,CAACE,IAAI,CAACJ,CAAC,EAAI,CAACA,CAAC,CAAC,CAAE,OAC9D,KAAM,CAAAK,QAAQ,CAAGlF,gBAAgB,CAAC+E,QAAQ,CAAE7C,UAAU,CAAC,CACvDG,iBAAiB,CAAC6C,QAAQ,CAAC,CAC3B3C,WAAW,CAAC4C,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CAC7B1C,UAAU,CAAC0C,IAAI,EAAI,CACjB,GAAGA,IAAI,CACP,CAAET,IAAI,CAAE,CAAC,GAAGK,QAAQ,CAAC,CAAEG,QAAS,CAAC,CAClC,CAAC,CACF/E,SAAS,CAAC+E,QAAQ,CAACE,OAAO,GAAKjE,UAAU,CAAG,KAAK,CAAG,OAAO,CAAC,CAE5D,GAAIlB,WAAW,CAAC8E,QAAQ,CAAE7C,UAAU,CAAC,CAAE,CACrClB,YAAY,CAAC,UAAU,CAAC,CACxBmC,cAAc,CAAC,KAAK,CAAC,CACrBJ,eAAe,CAAC,IAAI,CAAC,CACrB,KAAM,CAAAsC,KAAK,CAAG,CACZ5E,IAAI,CAAEQ,UAAU,CAChBqB,QAAQ,CAAEA,QAAQ,CAAG,CAAC,CACtBgD,IAAI,CAAEtC,KAAK,CACX7B,UAAU,CACVE,UAAU,CACVkE,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAClC,CAAC,CACD,KAAM,CAAAC,OAAO,CAAG,CAAC,GAAGlC,WAAW,CAAE6B,KAAK,CAAC,CAACM,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACtD,QAAQ,CAAGuD,CAAC,CAACvD,QAAQ,EAAIsD,CAAC,CAACN,IAAI,CAAGO,CAAC,CAACP,IAAI,CAAC,CAACzD,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAC/G4B,cAAc,CAACiC,OAAO,CAAC,CACvB9B,YAAY,CAACkC,OAAO,CAAC,aAAa,CAAEpC,IAAI,CAACqC,SAAS,CAACL,OAAO,CAAC,CAAC,CAC9D,CACA3D,eAAe,CAACC,KAAK,CAACb,UAAU,CAAC,CAACc,IAAI,CAAC,EAAE,CAAC,CAAC,CAC7C,CAAC,CAED,KAAM,CAAA+D,SAAS,CAAGA,CAAA,GAAM,CACtBhF,YAAY,CAAC,OAAO,CAAC,CACrBE,aAAa,CAAC,EAAE,CAAC,CACjBa,eAAe,CAACC,KAAK,CAACb,UAAU,CAAC,CAACc,IAAI,CAAC,EAAE,CAAC,CAAC,CAC3CE,aAAa,CAAC,EAAE,CAAC,CACjBE,iBAAiB,CAAC,IAAI,CAAC,CACvBE,WAAW,CAAC,CAAC,CAAC,CACdE,UAAU,CAAC,EAAE,CAAC,CACdrB,aAAa,CAAC,CAAC,CAAC,CAChBE,aAAa,CAAC,MAAM,CAAC,CACrB2B,QAAQ,CAAC,CAAC,CAAC,CACXE,cAAc,CAAC,KAAK,CAAC,CACrBE,WAAW,CAAC,KAAK,CAAC,CAClBE,OAAO,CAAC,IAAI,CAAC,CACbR,eAAe,CAAC,KAAK,CAAC,CACxB,CAAC,CAED,KAAM,CAAAkD,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAI7C,QAAQ,CAAE,OACd,IAAK,GAAI,CAAA8C,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG/E,UAAU,CAAE+E,CAAC,EAAE,CAAE,CACnC,GAAIpE,YAAY,CAACoE,CAAC,CAAC,GAAKhE,UAAU,CAACgE,CAAC,CAAC,CAAE,CACrC3C,OAAO,CAAC,CAAE4C,GAAG,CAAED,CAAC,CAAEE,KAAK,CAAElE,UAAU,CAACgE,CAAC,CAAE,CAAC,CAAC,CACzC7C,WAAW,CAAC,IAAI,CAAC,CACjB,MACF,CACF,CACF,CAAC,CAED,KAAM,CAAAgD,iBAAiB,CAAID,KAAK,EAAK,CACnCxE,iBAAiB,CAACuD,IAAI,EAAI,CACxB,GAAIA,IAAI,CAACmB,IAAI,CAACzB,CAAC,EAAIA,CAAC,CAACpE,IAAI,GAAK2F,KAAK,CAAC3F,IAAI,CAAC,CAAE,CACzC,GAAI0E,IAAI,CAACH,MAAM,EAAI7D,UAAU,CAAE,MAAO,CAAAgE,IAAI,CAC1C,MAAO,CAAAA,IAAI,CAACoB,MAAM,CAAC1B,CAAC,EAAIA,CAAC,CAACpE,IAAI,GAAK2F,KAAK,CAAC3F,IAAI,CAAC,CAChD,CAAC,IAAM,CACL,MAAO,CAAC,GAAG0E,IAAI,CAAEiB,KAAK,CAAC,CACzB,CACF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAI,iBAAiB,CAAIC,CAAC,EAAK,CAC/B1C,QAAQ,CAAC0C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC1B,CAAC,CAED,mBACEpG,KAAA,QAAKgE,SAAS,CAAE,MAAM9C,QAAQ,CAAG,OAAO,CAAG,EAAE,UAAUqC,KAAK,EAAG,CAAA8C,QAAA,eAC7DrG,KAAA,WAAQgE,SAAS,CAAC,YAAY,CAAAqC,QAAA,eAC5BvG,IAAA,OAAAuG,QAAA,CAAI,yBAAa,CAAI,CAAC,cACtBvG,IAAA,WAAQkE,SAAS,CAAC,UAAU,CAACsC,OAAO,CAAEA,CAAA,GAAMlE,WAAW,CAAC,IAAI,CAAE,CAAC,aAAW,WAAW,CAAAiE,QAAA,CAAC,GAAC,CAAQ,CAAC,cAChGvG,IAAA,WAAQkE,SAAS,CAAC,iBAAiB,CAACsC,OAAO,CAAEA,CAAA,GAAMhE,kBAAkB,CAAC,IAAI,CAAE,CAAC,aAAW,kBAAkB,CAAA+D,QAAA,CAAC,cAAE,CAAQ,CAAC,cACtHvG,IAAA,WAAQkE,SAAS,CAAC,UAAU,CAACsC,OAAO,CAAEA,CAAA,GAAMnF,WAAW,CAACoF,CAAC,EAAI,CAACA,CAAC,CAAE,CAAC,aAAW,kBAAkB,CAAAF,QAAA,CAC5FnF,QAAQ,CAAG,IAAI,CAAG,IAAI,CACjB,CAAC,cACTpB,IAAA,WAAQkE,SAAS,CAAC,QAAQ,CAACsC,OAAO,CAAEA,CAAA,GAAMrF,iBAAiB,CAACuF,EAAE,EAAI,CAACA,EAAE,CAAE,CAAC,aAAW,yBAAyB,CAAAH,QAAA,CACzGrF,cAAc,CAAG,SAAS,CAAG,KAAK,CAC7B,CAAC,cACThB,KAAA,WAAQoG,KAAK,CAAE7C,KAAM,CAACkD,QAAQ,CAAER,iBAAkB,CAACS,KAAK,CAAE,CAAEC,UAAU,CAAE,EAAG,CAAE,CAAAN,QAAA,eAC3EvG,IAAA,WAAQsG,KAAK,CAAC,SAAS,CAAAC,QAAA,CAAC,eAAa,CAAQ,CAAC,cAC9CvG,IAAA,WAAQsG,KAAK,CAAC,QAAQ,CAAAC,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtCvG,IAAA,WAAQsG,KAAK,CAAC,eAAe,CAAAC,QAAA,CAAC,eAAa,CAAQ,CAAC,EAC9C,CAAC,EACH,CAAC,cAETrG,KAAA,SAAMgE,SAAS,CAAC,UAAU,CAAAqC,QAAA,EACvB7F,SAAS,GAAK,OAAO,eACpBV,IAAA,CAACb,KAAK,EAAC2H,WAAW,CAAE3C,eAAgB,CAAE,CACvC,CAEAzD,SAAS,GAAK,OAAO,eACpBR,KAAA,QAAKgE,SAAS,CAAC,aAAa,CAAAqC,QAAA,eAC1BvG,IAAA,OAAAuG,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBrG,KAAA,UAAAqG,QAAA,EAAO,cAEL,cAAAvG,IAAA,WACEsG,KAAK,CAAExF,UAAW,CAClB6F,QAAQ,CAAEP,CAAC,EAAI,CACbrF,aAAa,CAACgG,MAAM,CAACX,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CACrC5E,eAAe,CAACC,KAAK,CAACoF,MAAM,CAACX,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC1E,IAAI,CAAC,EAAE,CAAC,CAAC,CACzD,CAAE,CAAA2E,QAAA,CAED5E,KAAK,CAACqF,IAAI,CAAC,CAAErC,MAAM,CAAEnE,aAAa,CAAGD,aAAa,CAAG,CAAE,CAAC,CAAE,CAAC0G,CAAC,CAAEpB,CAAC,GAC9DtF,aAAa,CAAGsF,CAClB,CAAC,CAACtB,GAAG,CAAC2C,GAAG,eACPlH,IAAA,WAAkBsG,KAAK,CAAEY,GAAI,CAAAX,QAAA,CAAEW,GAAG,EAArBA,GAA8B,CAC5C,CAAC,CACI,CAAC,EACJ,CAAC,cACRlH,IAAA,QAAK,CAAC,cACNE,KAAA,UAAAqG,QAAA,EAAO,aAEL,cAAArG,KAAA,WACEoG,KAAK,CAAEtF,UAAW,CAClB2F,QAAQ,CAAEP,CAAC,EAAInF,aAAa,CAACmF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAAAC,QAAA,eAE7CvG,IAAA,WAAQsG,KAAK,CAAC,MAAM,CAAAC,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cAClDvG,IAAA,WAAQsG,KAAK,CAAC,MAAM,CAAAC,QAAA,CAAC,2BAAyB,CAAQ,CAAC,EACjD,CAAC,EACJ,CAAC,cACRvG,IAAA,QAAK,CAAC,cACNE,KAAA,UAAAqG,QAAA,EAAO,YAEL,cAAAvG,IAAA,QAAK4G,KAAK,CAAE,CAAEO,OAAO,CAAE,MAAM,CAAEC,QAAQ,CAAE,MAAM,CAAEC,MAAM,CAAE,SAAU,CAAE,CAAAd,QAAA,CAClEpG,cAAc,CAACoE,GAAG,CAACwB,KAAK,eACvB/F,IAAA,SAEEkE,SAAS,CAAC,WAAW,CACrB0C,KAAK,CAAE,CACLU,UAAU,CAAEvB,KAAK,CAAC1F,GAAG,CACrBkH,MAAM,CAAEjG,cAAc,CAAC2E,IAAI,CAACzB,CAAC,EAAIA,CAAC,CAACpE,IAAI,GAAK2F,KAAK,CAAC3F,IAAI,CAAC,CAAG,gBAAgB,CAAG,iBAAiB,CAC9FiH,MAAM,CAAE,aAAa,CACrBG,KAAK,CAAE,EAAE,CACTC,MAAM,CAAE,EAAE,CACVC,YAAY,CAAE,CAAC,CACfP,OAAO,CAAE,cAAc,CACvBQ,aAAa,CAAE,QAAQ,CACvBC,QAAQ,CAAE,UAAU,CACpBC,OAAO,CAAEvG,cAAc,CAAC2E,IAAI,CAACzB,CAAC,EAAIA,CAAC,CAACpE,IAAI,GAAK2F,KAAK,CAAC3F,IAAI,CAAC,CAAG,CAAC,CAAG,GAAG,CAClE0H,MAAM,CAAE,SACV,CAAE,CACFC,KAAK,CAAEhC,KAAK,CAAC3F,IAAK,CAClB4H,QAAQ,CAAE,CAAE,CACZ,aAAYjC,KAAK,CAAC3F,IAAK,CACvBoG,OAAO,CAAEA,CAAA,GAAMR,iBAAiB,CAACD,KAAK,CAAE,CACxCkC,SAAS,CAAE7B,CAAC,EAAI,CAAE,GAAIA,CAAC,CAAC8B,GAAG,GAAK,OAAO,EAAI9B,CAAC,CAAC8B,GAAG,GAAK,GAAG,CAAElC,iBAAiB,CAACD,KAAK,CAAC,CAAE,CAAE,CAAAQ,QAAA,CAErFrF,cAAc,eACblB,IAAA,SAAMkE,SAAS,CAAC,aAAa,CAAC0C,KAAK,CAAE,CACnCgB,QAAQ,CAAE,UAAU,CACpBO,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,EAAE,CAChBC,QAAQ,CAAE,EAAE,CACZtC,KAAK,CAAE,MAAM,CACbuC,UAAU,CAAE,cACd,CAAE,CAAA/B,QAAA,CAAER,KAAK,CAACzF,OAAO,CAAO,CACzB,EA7BIyF,KAAK,CAAC3F,IA8BP,CACP,CAAC,CACC,CAAC,cACNJ,IAAA,UAAAuG,QAAA,CAAO,6EAA2E,CAAO,CAAC,EACrF,CAAC,cACRvG,IAAA,QAAK,CAAC,cACNA,IAAA,WACEwG,OAAO,CAAEpC,WAAY,CACrBmE,QAAQ,CAAEjH,cAAc,CAACqD,MAAM,CAAG7D,UAAW,CAC7CoD,SAAS,CAAC,gBAAgB,CAAAqC,QAAA,CAC3B,YAAU,CAAQ,CAAC,EACjB,CACN,CAEA7F,SAAS,GAAK,SAAS,eACtBR,KAAA,QAAKgE,SAAS,CAAC,gBAAgB,CAAAqC,QAAA,eAC7BvG,IAAA,CAACR,QAAQ,EACPoB,UAAU,CAAEA,UAAW,CACvBqB,QAAQ,CAAEA,QAAS,CACnBnB,UAAU,CAAEA,UAAW,CACvBE,UAAU,CAAEA,UAAW,CACvB2B,KAAK,CAAEA,KAAM,CACb9C,UAAU,CAAEA,UAAW,CACvB2I,MAAM,CAAE5C,UAAW,CACnB7C,QAAQ,CAAEA,QAAS,CACnBE,IAAI,CAAEA,IAAK,CACZ,CAAC,cACFjD,IAAA,CAACZ,UAAU,EACTqC,YAAY,CAAEA,YAAa,CAC3BgH,aAAa,CAAE/G,eAAgB,CAC/BgH,aAAa,CAAEjE,WAAY,CAC3BH,MAAM,CAAEhD,cAAe,CACvBR,UAAU,CAAEA,UAAW,CACvBI,cAAc,CAAEA,cAAe,CAC/ByH,QAAQ,CAAE3H,UAAU,GAAK,MAAO,CAChCmB,OAAO,CAAEA,OAAQ,CAClB,CAAC,CACDJ,cAAc,eACb7B,KAAA,QAAKgE,SAAS,CAAC,gBAAgB,CAAC0C,KAAK,CAAE,CAAEgC,SAAS,CAAE,EAAE,CAAEC,UAAU,CAAE,UAAW,CAAE,CAAAtC,QAAA,eAC/EvG,IAAA,WAAAuG,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAACxE,cAAc,CAACgD,OAAO,CAAC,YAAU,CAAChD,cAAc,CAAC+G,aAAa,CAAC,YAC7F,EAAK,CACN,EACE,CACN,CAEApI,SAAS,GAAK,UAAU,eACvBR,KAAA,QAAKgE,SAAS,CAAC,eAAe,CAAAqC,QAAA,EAC3B9D,YAAY,eAAIzC,IAAA,CAACT,cAAc,GAAE,CAAC,cACnCS,IAAA,CAACP,eAAe,EACd0C,OAAO,CAAEA,OAAQ,CACjBb,cAAc,CAAEA,cAAe,CAC/BJ,cAAc,CAAEA,cAAe,CAChC,CAAC,cACFhB,KAAA,OAAAqG,QAAA,EAAI,gCAAoB,CAAC3F,UAAU,CAAC,GAAC,EAAI,CAAC,cAC1CV,KAAA,MAAAqG,QAAA,EAAG,0BAAwB,CAACtE,QAAQ,CAAC,gBAAc,CAACpC,UAAU,CAAC8C,KAAK,CAAC,CAAC,GAAC,EAAG,CAAC,cAC3EzC,KAAA,MAAAqG,QAAA,EAAG,eACY,CAAC,GAAG,cACjBvG,IAAA,SAAAuG,QAAA,CACG1E,UAAU,CAAC0C,GAAG,CAAC,CAACwB,KAAK,CAAEgD,GAAG,GAAK,CAC9B,KAAM,CAAAC,QAAQ,CAAG1H,cAAc,CAAC2E,IAAI,CAACzB,CAAC,EAAIA,CAAC,CAACpE,IAAI,GAAK2F,KAAK,CAAC,CAC3D,mBACE/F,IAAA,SAEEkE,SAAS,CAAC,WAAW,CACrB0C,KAAK,CAAE,CACLU,UAAU,CAAE0B,QAAQ,CAAGA,QAAQ,CAAC3I,GAAG,CAAG,MAAM,CAC5CmH,KAAK,CAAE,EAAE,CACTC,MAAM,CAAE,EAAE,CACVC,YAAY,CAAE,CAAC,CACfL,MAAM,CAAE,OAAO,CACfE,MAAM,CAAE,gBAAgB,CACxBJ,OAAO,CAAE,cAAc,CACvBQ,aAAa,CAAE,QAAQ,CACvBC,QAAQ,CAAE,UACZ,CAAE,CACFG,KAAK,CAAEhC,KAAM,CAAAQ,QAAA,CAEZrF,cAAc,EAAI8H,QAAQ,eACzBhJ,IAAA,SAAM4G,KAAK,CAAE,CACXgB,QAAQ,CAAE,UAAU,CACpBO,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,EAAE,CAChBC,QAAQ,CAAE,EAAE,CACZtC,KAAK,CAAE,MAAM,CACbuC,UAAU,CAAE,cACd,CAAE,CAAA/B,QAAA,CAAEyC,QAAQ,CAAC1I,OAAO,CAAO,CAC5B,EAvBIyI,GAwBD,CAAC,CAEX,CAAC,CAAC,CACE,CAAC,EACN,CAAC,cACJ/I,IAAA,WAAQwG,OAAO,CAAEb,SAAU,CAACzB,SAAS,CAAC,gBAAgB,CAAAqC,QAAA,CAAC,YAEvD,CAAQ,CAAC,EACN,CACN,EACG,CAAC,CAENlE,QAAQ,eAAIrC,IAAA,CAACX,SAAS,EAAC4J,OAAO,CAAEA,CAAA,GAAM3G,WAAW,CAAC,KAAK,CAAE,CAAE,CAAC,CAC5DC,eAAe,eAAIvC,IAAA,CAACV,gBAAgB,EAAC6D,WAAW,CAAEA,WAAY,CAAC8F,OAAO,CAAEA,CAAA,GAAMzG,kBAAkB,CAAC,KAAK,CAAE,CAAE,CAAC,EACzG,CAAC,CAEV,CAEA,cAAe,CAAA/B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}