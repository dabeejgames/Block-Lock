{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beej\\\\Documents\\\\Block-Lock\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Lobby from './components/Lobby';\nimport GuessPanel from './components/GuessPanel';\nimport HelpModal from './components/HelpModal';\nimport LeaderboardModal from './components/LeaderboardModal';\nimport ConfettiEffect from './components/ConfettiEffect';\nimport GameInfo from './components/GameInfo';\nimport PreviousGuesses from './components/PreviousGuesses';\nimport { generateCode } from './utils/generateCode';\nimport { generateFeedback } from './utils/generateFeedback';\nimport { arraysEqual } from './utils/arraysEqual';\nimport { formatTime } from './utils/formatTime';\nimport { playSound } from './utils/playSound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_COLORS = [{\n  name: 'red',\n  hex: '#e53935',\n  pattern: 'R'\n}, {\n  name: 'blue',\n  hex: '#1e88e5',\n  pattern: 'B'\n}, {\n  name: 'green',\n  hex: '#43a047',\n  pattern: 'G'\n}, {\n  name: 'purple',\n  hex: '#8e24aa',\n  pattern: 'P'\n}, {\n  name: 'yellow',\n  hex: '#fbc02d',\n  pattern: 'Y'\n}, {\n  name: 'orange',\n  hex: '#fb8c00',\n  pattern: 'O'\n}, {\n  name: 'pink',\n  hex: '#ff69b4',\n  pattern: 'Pi'\n},\n// lighter pink\n{\n  name: 'brown',\n  hex: '#6d4c41',\n  pattern: 'Br'\n}];\nconst minCodeLength = 4;\nconst maxCodeLength = 7;\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState('lobby');\n  const [playerName, setPlayerName] = useState('');\n  const [codeLength, setCodeLength] = useState(4);\n  const [difficulty, setDifficulty] = useState('easy');\n  const [colorBlindMode, setColorBlindMode] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [selectedColors, setSelectedColors] = useState(DEFAULT_COLORS.slice(0, 6));\n  const [currentGuess, setCurrentGuess] = useState(Array(4).fill(''));\n  const [targetCode, setTargetCode] = useState([]);\n  const [latestFeedback, setLatestFeedback] = useState(null);\n  const [attempts, setAttempts] = useState(0);\n  const [guesses, setGuesses] = useState([]);\n  const [showHelp, setShowHelp] = useState(false);\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [timerActive, setTimerActive] = useState(false);\n  const [hintUsed, setHintUsed] = useState(false);\n  const [hint, setHint] = useState(null);\n  const [leaderboard, setLeaderboard] = useState(() => JSON.parse(localStorage.getItem('leaderboard') || '[]'));\n  const [theme, setTheme] = useState('default');\n  const timerRef = useRef();\n  useEffect(() => {\n    if (timerActive) {\n      timerRef.current = setInterval(() => setTimer(t => t + 1), 1000);\n    } else {\n      clearInterval(timerRef.current);\n    }\n    return () => clearInterval(timerRef.current);\n  }, [timerActive]);\n  useEffect(() => {\n    document.body.className = darkMode ? 'dark-mode' : '';\n  }, [darkMode]);\n  const handleStartGame = name => {\n    setPlayerName(name);\n    setGameState('setup');\n  };\n  const handleSetup = () => {\n    const code = generateCode({\n      codeLength,\n      colors: selectedColors.map(c => c.name),\n      difficulty\n    });\n    setTargetCode(code);\n    setCurrentGuess(Array(codeLength).fill(''));\n    setLatestFeedback(null);\n    setAttempts(0);\n    setGuesses([]);\n    setHintUsed(false);\n    setHint(null);\n    setTimer(0);\n    setTimerActive(true);\n    setGameState('playing');\n    setShowConfetti(false);\n  };\n  const submitGuess = guessArr => {\n    if (guessArr.length !== codeLength || guessArr.some(c => !c)) return;\n    const feedback = generateFeedback(guessArr, targetCode);\n    setLatestFeedback(feedback);\n    setAttempts(prev => prev + 1);\n    setGuesses(prev => [...prev, {\n      code: [...guessArr],\n      feedback\n    }]);\n    playSound(feedback.correct === codeLength ? 'win' : 'guess');\n    if (arraysEqual(guessArr, targetCode)) {\n      setGameState('finished');\n      setTimerActive(false);\n      setShowConfetti(true);\n      const entry = {\n        name: playerName,\n        attempts: attempts + 1,\n        time: timer,\n        codeLength,\n        difficulty,\n        date: new Date().toLocaleString()\n      };\n      const updated = [...leaderboard, entry].sort((a, b) => a.attempts - b.attempts || a.time - b.time).slice(0, 10);\n      setLeaderboard(updated);\n      localStorage.setItem('leaderboard', JSON.stringify(updated));\n    }\n    setCurrentGuess(Array(codeLength).fill(''));\n  };\n  const resetGame = () => {\n    setGameState('lobby');\n    setPlayerName('');\n    setCurrentGuess(Array(codeLength).fill(''));\n    setTargetCode([]);\n    setLatestFeedback(null);\n    setAttempts(0);\n    setGuesses([]);\n    setCodeLength(4);\n    setDifficulty('easy');\n    setTimer(0);\n    setTimerActive(false);\n    setHintUsed(false);\n    setHint(null);\n    setShowConfetti(false);\n  };\n  const handleHint = () => {\n    if (hintUsed) return;\n    for (let i = 0; i < codeLength; i++) {\n      if (currentGuess[i] !== targetCode[i]) {\n        setHint({\n          pos: i,\n          color: targetCode[i]\n        });\n        setHintUsed(true);\n        break;\n      }\n    }\n  };\n  const handleColorToggle = color => {\n    setSelectedColors(prev => {\n      if (prev.find(c => c.name === color.name)) {\n        if (prev.length <= codeLength) return prev;\n        return prev.filter(c => c.name !== color.name);\n      } else {\n        return [...prev, color];\n      }\n    });\n  };\n  const handleThemeChange = e => {\n    setTheme(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App${darkMode ? ' dark' : ''} theme-${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDD12 Block-Lock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"help-btn\",\n        onClick: () => setShowHelp(true),\n        \"aria-label\": \"Show help\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"leaderboard-btn\",\n        onClick: () => setShowLeaderboard(true),\n        \"aria-label\": \"Show leaderboard\",\n        children: \"\\uD83C\\uDFC6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dark-btn\",\n        onClick: () => setDarkMode(d => !d),\n        \"aria-label\": \"Toggle dark mode\",\n        children: darkMode ? '🌙' : '☀️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cb-btn\",\n        onClick: () => setColorBlindMode(cb => !cb),\n        \"aria-label\": \"Toggle color-blind mode\",\n        children: colorBlindMode ? '👁️‍🗨️' : '👁️'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: theme,\n        onChange: handleThemeChange,\n        style: {\n          marginLeft: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Default Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pastel\",\n          children: \"Pastel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high-contrast\",\n          children: \"High Contrast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [gameState === 'lobby' && /*#__PURE__*/_jsxDEV(Lobby, {\n        onStartGame: handleStartGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), gameState === 'setup' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Code Length:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: codeLength,\n            onChange: e => {\n              setCodeLength(Number(e.target.value));\n              setCurrentGuess(Array(Number(e.target.value)).fill(''));\n            },\n            children: Array.from({\n              length: maxCodeLength - minCodeLength + 1\n            }, (_, i) => minCodeLength + i).map(len => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: len,\n              children: len\n            }, len, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Difficulty:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: difficulty,\n            onChange: e => setDifficulty(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"easy\",\n              children: \"Easy (no duplicates)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hard\",\n              children: \"Hard (duplicates allowed)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Color Set:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              margin: '0.5em 0'\n            },\n            children: DEFAULT_COLORS.map(color => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"color-peg\",\n              style: {\n                background: color.hex,\n                border: selectedColors.find(c => c.name === color.name) ? '2px solid #444' : '2px dashed #aaa',\n                margin: '0 5px 5px 0',\n                width: 32,\n                height: 32,\n                borderRadius: 4,\n                display: 'inline-block',\n                verticalAlign: 'middle',\n                position: 'relative',\n                opacity: selectedColors.find(c => c.name === color.name) ? 1 : 0.3,\n                cursor: 'pointer'\n              },\n              title: color.name,\n              tabIndex: 0,\n              \"aria-label\": color.name,\n              onClick: () => handleColorToggle(color),\n              onKeyDown: e => {\n                if (e.key === 'Enter' || e.key === ' ') handleColorToggle(color);\n              },\n              children: colorBlindMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"peg-pattern\",\n                style: {\n                  position: 'absolute',\n                  top: 6,\n                  left: 10,\n                  fontSize: 13,\n                  color: '#fff',\n                  textShadow: '0 0 2px #000'\n                },\n                children: color.pattern\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this)\n            }, color.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Click to select/deselect. At least as many as code length must be selected.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSetup,\n          disabled: selectedColors.length < codeLength,\n          className: \"start-game-btn\",\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(GameInfo, {\n          playerName: playerName,\n          attempts: attempts,\n          codeLength: codeLength,\n          difficulty: difficulty,\n          timer: timer,\n          formatTime: formatTime,\n          onHint: handleHint,\n          hintUsed: hintUsed,\n          hint: hint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GuessPanel, {\n          currentGuess: currentGuess,\n          onGuessChange: setCurrentGuess,\n          onSubmitGuess: submitGuess,\n          colors: selectedColors,\n          codeLength: codeLength,\n          colorBlindMode: colorBlindMode,\n          easyMode: difficulty === 'easy',\n          guesses: guesses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), latestFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-feedback\",\n          style: {\n            marginTop: 10,\n            transition: 'all 0.3s'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Feedback:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), \" \", latestFeedback.correct, \" correct, \", latestFeedback.wrongPosition, \" misplaced\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), gameState === 'finished' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-finished\",\n        children: [showConfetti && /*#__PURE__*/_jsxDEV(ConfettiEffect, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(PreviousGuesses, {\n          guesses: guesses,\n          selectedColors: selectedColors,\n          colorBlindMode: colorBlindMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83C\\uDF89 Congratulations, \", playerName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You cracked the code in \", attempts, \" attempts and \", formatTime(timer), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The code was:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            children: targetCode.map((color, idx) => {\n              const colorObj = selectedColors.find(c => c.name === color);\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"color-peg\",\n                style: {\n                  background: colorObj ? colorObj.hex : '#ccc',\n                  width: 32,\n                  height: 32,\n                  borderRadius: 4,\n                  margin: '0 5px',\n                  border: '2px solid #444',\n                  display: 'inline-block',\n                  verticalAlign: 'middle',\n                  position: 'relative'\n                },\n                title: color,\n                children: colorBlindMode && colorObj && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    position: 'absolute',\n                    top: 6,\n                    left: 10,\n                    fontSize: 13,\n                    color: '#fff',\n                    textShadow: '0 0 2px #000'\n                  },\n                  children: colorObj.pattern\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 25\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          className: \"play-again-btn\",\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), showHelp && /*#__PURE__*/_jsxDEV(HelpModal, {\n      onClose: () => setShowHelp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 20\n    }, this), showLeaderboard && /*#__PURE__*/_jsxDEV(LeaderboardModal, {\n      leaderboard: leaderboard,\n      onClose: () => setShowLeaderboard(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cpigYtn5ubMJ3c8yZ0Jlxp870Lc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Lobby","GuessPanel","HelpModal","LeaderboardModal","ConfettiEffect","GameInfo","PreviousGuesses","generateCode","generateFeedback","arraysEqual","formatTime","playSound","jsxDEV","_jsxDEV","DEFAULT_COLORS","name","hex","pattern","minCodeLength","maxCodeLength","App","_s","gameState","setGameState","playerName","setPlayerName","codeLength","setCodeLength","difficulty","setDifficulty","colorBlindMode","setColorBlindMode","darkMode","setDarkMode","selectedColors","setSelectedColors","slice","currentGuess","setCurrentGuess","Array","fill","targetCode","setTargetCode","latestFeedback","setLatestFeedback","attempts","setAttempts","guesses","setGuesses","showHelp","setShowHelp","showLeaderboard","setShowLeaderboard","showConfetti","setShowConfetti","timer","setTimer","timerActive","setTimerActive","hintUsed","setHintUsed","hint","setHint","leaderboard","setLeaderboard","JSON","parse","localStorage","getItem","theme","setTheme","timerRef","current","setInterval","t","clearInterval","document","body","className","handleStartGame","handleSetup","code","colors","map","c","submitGuess","guessArr","length","some","feedback","prev","correct","entry","time","date","Date","toLocaleString","updated","sort","a","b","setItem","stringify","resetGame","handleHint","i","pos","color","handleColorToggle","find","filter","handleThemeChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","d","cb","onChange","style","marginLeft","onStartGame","Number","from","_","len","display","flexWrap","margin","background","border","width","height","borderRadius","verticalAlign","position","opacity","cursor","title","tabIndex","onKeyDown","key","top","left","fontSize","textShadow","disabled","onHint","onGuessChange","onSubmitGuess","easyMode","marginTop","transition","wrongPosition","idx","colorObj","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Beej/Documents/Block-Lock/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport Lobby from './components/Lobby';\r\nimport GuessPanel from './components/GuessPanel';\r\nimport HelpModal from './components/HelpModal';\r\nimport LeaderboardModal from './components/LeaderboardModal';\r\nimport ConfettiEffect from './components/ConfettiEffect';\r\nimport GameInfo from './components/GameInfo';\r\nimport PreviousGuesses from './components/PreviousGuesses';\r\nimport { generateCode } from './utils/generateCode';\r\nimport { generateFeedback } from './utils/generateFeedback';\r\nimport { arraysEqual } from './utils/arraysEqual';\r\nimport { formatTime } from './utils/formatTime';\r\nimport { playSound } from './utils/playSound';\r\n\r\nconst DEFAULT_COLORS = [\r\n  { name: 'red', hex: '#e53935', pattern: 'R' },\r\n  { name: 'blue', hex: '#1e88e5', pattern: 'B' },\r\n  { name: 'green', hex: '#43a047', pattern: 'G' },\r\n  { name: 'purple', hex: '#8e24aa', pattern: 'P' },\r\n  { name: 'yellow', hex: '#fbc02d', pattern: 'Y' },\r\n  { name: 'orange', hex: '#fb8c00', pattern: 'O' },\r\n  { name: 'pink', hex: '#ff69b4', pattern: 'Pi' }, // lighter pink\r\n  { name: 'brown', hex: '#6d4c41', pattern: 'Br' }\r\n];\r\n\r\nconst minCodeLength = 4;\r\nconst maxCodeLength = 7;\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState('lobby');\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [codeLength, setCodeLength] = useState(4);\r\n  const [difficulty, setDifficulty] = useState('easy');\r\n  const [colorBlindMode, setColorBlindMode] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [selectedColors, setSelectedColors] = useState(DEFAULT_COLORS.slice(0, 6));\r\n  const [currentGuess, setCurrentGuess] = useState(Array(4).fill(''));\r\n  const [targetCode, setTargetCode] = useState([]);\r\n  const [latestFeedback, setLatestFeedback] = useState(null);\r\n  const [attempts, setAttempts] = useState(0);\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [showHelp, setShowHelp] = useState(false);\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n  const [timerActive, setTimerActive] = useState(false);\r\n  const [hintUsed, setHintUsed] = useState(false);\r\n  const [hint, setHint] = useState(null);\r\n  const [leaderboard, setLeaderboard] = useState(() =>\r\n    JSON.parse(localStorage.getItem('leaderboard') || '[]')\r\n  );\r\n  const [theme, setTheme] = useState('default');\r\n  const timerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (timerActive) {\r\n      timerRef.current = setInterval(() => setTimer(t => t + 1), 1000);\r\n    } else {\r\n      clearInterval(timerRef.current);\r\n    }\r\n    return () => clearInterval(timerRef.current);\r\n  }, [timerActive]);\r\n\r\n  useEffect(() => {\r\n    document.body.className = darkMode ? 'dark-mode' : '';\r\n  }, [darkMode]);\r\n\r\n  const handleStartGame = (name) => {\r\n    setPlayerName(name);\r\n    setGameState('setup');\r\n  };\r\n\r\n  const handleSetup = () => {\r\n    const code = generateCode({ codeLength, colors: selectedColors.map(c => c.name), difficulty });\r\n    setTargetCode(code);\r\n    setCurrentGuess(Array(codeLength).fill(''));\r\n    setLatestFeedback(null);\r\n    setAttempts(0);\r\n    setGuesses([]);\r\n    setHintUsed(false);\r\n    setHint(null);\r\n    setTimer(0);\r\n    setTimerActive(true);\r\n    setGameState('playing');\r\n    setShowConfetti(false);\r\n  };\r\n\r\n  const submitGuess = (guessArr) => {\r\n    if (guessArr.length !== codeLength || guessArr.some(c => !c)) return;\r\n    const feedback = generateFeedback(guessArr, targetCode);\r\n    setLatestFeedback(feedback);\r\n    setAttempts(prev => prev + 1);\r\n    setGuesses(prev => [\r\n      ...prev,\r\n      { code: [...guessArr], feedback }\r\n    ]);\r\n    playSound(feedback.correct === codeLength ? 'win' : 'guess');\r\n\r\n    if (arraysEqual(guessArr, targetCode)) {\r\n      setGameState('finished');\r\n      setTimerActive(false);\r\n      setShowConfetti(true);\r\n      const entry = {\r\n        name: playerName,\r\n        attempts: attempts + 1,\r\n        time: timer,\r\n        codeLength,\r\n        difficulty,\r\n        date: new Date().toLocaleString()\r\n      };\r\n      const updated = [...leaderboard, entry].sort((a, b) => a.attempts - b.attempts || a.time - b.time).slice(0, 10);\r\n      setLeaderboard(updated);\r\n      localStorage.setItem('leaderboard', JSON.stringify(updated));\r\n    }\r\n    setCurrentGuess(Array(codeLength).fill(''));\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setGameState('lobby');\r\n    setPlayerName('');\r\n    setCurrentGuess(Array(codeLength).fill(''));\r\n    setTargetCode([]);\r\n    setLatestFeedback(null);\r\n    setAttempts(0);\r\n    setGuesses([]);\r\n    setCodeLength(4);\r\n    setDifficulty('easy');\r\n    setTimer(0);\r\n    setTimerActive(false);\r\n    setHintUsed(false);\r\n    setHint(null);\r\n    setShowConfetti(false);\r\n  };\r\n\r\n  const handleHint = () => {\r\n    if (hintUsed) return;\r\n    for (let i = 0; i < codeLength; i++) {\r\n      if (currentGuess[i] !== targetCode[i]) {\r\n        setHint({ pos: i, color: targetCode[i] });\r\n        setHintUsed(true);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleColorToggle = (color) => {\r\n    setSelectedColors(prev => {\r\n      if (prev.find(c => c.name === color.name)) {\r\n        if (prev.length <= codeLength) return prev;\r\n        return prev.filter(c => c.name !== color.name);\r\n      } else {\r\n        return [...prev, color];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleThemeChange = (e) => {\r\n    setTheme(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={`App${darkMode ? ' dark' : ''} theme-${theme}`}>\r\n      <header className=\"App-header\">\r\n        <h1>🔒 Block-Lock</h1>\r\n        <button className=\"help-btn\" onClick={() => setShowHelp(true)} aria-label=\"Show help\">?</button>\r\n        <button className=\"leaderboard-btn\" onClick={() => setShowLeaderboard(true)} aria-label=\"Show leaderboard\">🏆</button>\r\n        <button className=\"dark-btn\" onClick={() => setDarkMode(d => !d)} aria-label=\"Toggle dark mode\">\r\n          {darkMode ? '🌙' : '☀️'}\r\n        </button>\r\n        <button className=\"cb-btn\" onClick={() => setColorBlindMode(cb => !cb)} aria-label=\"Toggle color-blind mode\">\r\n          {colorBlindMode ? '👁️‍🗨️' : '👁️'}\r\n        </button>\r\n        <select value={theme} onChange={handleThemeChange} style={{ marginLeft: 12 }}>\r\n          <option value=\"default\">Default Theme</option>\r\n          <option value=\"pastel\">Pastel</option>\r\n          <option value=\"high-contrast\">High Contrast</option>\r\n        </select>\r\n      </header>\r\n\r\n      <main className=\"App-main\">\r\n        {gameState === 'lobby' && (\r\n          <Lobby onStartGame={handleStartGame} />\r\n        )}\r\n\r\n        {gameState === 'setup' && (\r\n          <div className=\"setup-panel\">\r\n            <h2>Game Setup</h2>\r\n            <label>\r\n              Code Length:\r\n              <select\r\n                value={codeLength}\r\n                onChange={e => {\r\n                  setCodeLength(Number(e.target.value));\r\n                  setCurrentGuess(Array(Number(e.target.value)).fill(''));\r\n                }}\r\n              >\r\n                {Array.from({ length: maxCodeLength - minCodeLength + 1 }, (_, i) =>\r\n                  minCodeLength + i\r\n                ).map(len => (\r\n                  <option key={len} value={len}>{len}</option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Difficulty:\r\n              <select\r\n                value={difficulty}\r\n                onChange={e => setDifficulty(e.target.value)}\r\n              >\r\n                <option value=\"easy\">Easy (no duplicates)</option>\r\n                <option value=\"hard\">Hard (duplicates allowed)</option>\r\n              </select>\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Color Set:\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', margin: '0.5em 0' }}>\r\n                {DEFAULT_COLORS.map(color => (\r\n                  <span\r\n                    key={color.name}\r\n                    className=\"color-peg\"\r\n                    style={{\r\n                      background: color.hex,\r\n                      border: selectedColors.find(c => c.name === color.name) ? '2px solid #444' : '2px dashed #aaa',\r\n                      margin: '0 5px 5px 0',\r\n                      width: 32,\r\n                      height: 32,\r\n                      borderRadius: 4,\r\n                      display: 'inline-block',\r\n                      verticalAlign: 'middle',\r\n                      position: 'relative',\r\n                      opacity: selectedColors.find(c => c.name === color.name) ? 1 : 0.3,\r\n                      cursor: 'pointer'\r\n                    }}\r\n                    title={color.name}\r\n                    tabIndex={0}\r\n                    aria-label={color.name}\r\n                    onClick={() => handleColorToggle(color)}\r\n                    onKeyDown={e => { if (e.key === 'Enter' || e.key === ' ') handleColorToggle(color); }}\r\n                  >\r\n                    {colorBlindMode && (\r\n                      <span className=\"peg-pattern\" style={{\r\n                        position: 'absolute',\r\n                        top: 6, left: 10,\r\n                        fontSize: 13,\r\n                        color: '#fff',\r\n                        textShadow: '0 0 2px #000'\r\n                      }}>{color.pattern}</span>\r\n                    )}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <small>Click to select/deselect. At least as many as code length must be selected.</small>\r\n            </label>\r\n            <br />\r\n            <button\r\n              onClick={handleSetup}\r\n              disabled={selectedColors.length < codeLength}\r\n              className=\"start-game-btn\"\r\n            >Start Game</button>\r\n          </div>\r\n        )}\r\n\r\n        {gameState === 'playing' && (\r\n          <div className=\"game-container\">\r\n            <GameInfo\r\n              playerName={playerName}\r\n              attempts={attempts}\r\n              codeLength={codeLength}\r\n              difficulty={difficulty}\r\n              timer={timer}\r\n              formatTime={formatTime}\r\n              onHint={handleHint}\r\n              hintUsed={hintUsed}\r\n              hint={hint}\r\n            />\r\n            <GuessPanel\r\n              currentGuess={currentGuess}\r\n              onGuessChange={setCurrentGuess}\r\n              onSubmitGuess={submitGuess}\r\n              colors={selectedColors}\r\n              codeLength={codeLength}\r\n              colorBlindMode={colorBlindMode}\r\n              easyMode={difficulty === 'easy'}\r\n              guesses={guesses}\r\n            />\r\n            {latestFeedback && (\r\n              <div className=\"guess-feedback\" style={{ marginTop: 10, transition: 'all 0.3s' }}>\r\n                <strong>Feedback:</strong> {latestFeedback.correct} correct, {latestFeedback.wrongPosition} misplaced\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {gameState === 'finished' && (\r\n          <div className=\"game-finished\">\r\n            {showConfetti && <ConfettiEffect />}\r\n            <PreviousGuesses\r\n              guesses={guesses}\r\n              selectedColors={selectedColors}\r\n              colorBlindMode={colorBlindMode}\r\n            />\r\n            <h2>🎉 Congratulations, {playerName}!</h2>\r\n            <p>You cracked the code in {attempts} attempts and {formatTime(timer)}!</p>\r\n            <p>\r\n              The code was:{' '}\r\n              <span>\r\n                {targetCode.map((color, idx) => {\r\n                  const colorObj = selectedColors.find(c => c.name === color);\r\n                  return (\r\n                    <span\r\n                      key={idx}\r\n                      className=\"color-peg\"\r\n                      style={{\r\n                        background: colorObj ? colorObj.hex : '#ccc',\r\n                        width: 32,\r\n                        height: 32,\r\n                        borderRadius: 4,\r\n                        margin: '0 5px',\r\n                        border: '2px solid #444',\r\n                        display: 'inline-block',\r\n                        verticalAlign: 'middle',\r\n                        position: 'relative'\r\n                      }}\r\n                      title={color}\r\n                    >\r\n                      {colorBlindMode && colorObj && (\r\n                        <span style={{\r\n                          position: 'absolute',\r\n                          top: 6, left: 10,\r\n                          fontSize: 13,\r\n                          color: '#fff',\r\n                          textShadow: '0 0 2px #000'\r\n                        }}>{colorObj.pattern}</span>\r\n                      )}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </span>\r\n            </p>\r\n            <button onClick={resetGame} className=\"play-again-btn\">\r\n              Play Again\r\n            </button>\r\n          </div>\r\n        )}\r\n      </main>\r\n\r\n      {showHelp && <HelpModal onClose={() => setShowHelp(false)} />}\r\n      {showLeaderboard && <LeaderboardModal leaderboard={leaderboard} onClose={() => setShowLeaderboard(false)} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}