{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beej\\\\Documents\\\\Block-Lock\\\\client\\\\src\\\\components\\\\GameBoard.js\";\nimport React from 'react';\nimport './GameBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = ({\n  guesses,\n  currentGuess\n}) => {\n  const maxGuesses = 10;\n  const emptyRows = maxGuesses - guesses.length;\n  const renderFeedback = feedback => {\n    const dots = [];\n\n    // Add red dots for correct position\n    for (let i = 0; i < feedback.correct; i++) {\n      dots.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"feedback-dot correct\"\n      }, `correct-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this));\n    }\n\n    // Add yellow dots for wrong position\n    for (let i = 0; i < feedback.wrongPosition; i++) {\n      dots.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"feedback-dot wrong-position\"\n      }, `wrong-pos-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this));\n    }\n\n    // Add black dots for incorrect\n    const remaining = 4 - feedback.correct - feedback.wrongPosition;\n    for (let i = 0; i < remaining; i++) {\n      dots.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"feedback-dot incorrect\"\n      }, `incorrect-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this));\n    }\n    return dots;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-column\",\n          children: \"Guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-column\",\n          children: \"Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameboard-rows\",\n        children: [guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameboard-row completed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess-display\",\n            children: guess.code.split('').map((digit, digitIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digit-cell\",\n              children: digit\n            }, digitIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-display\",\n            children: renderFeedback(guess.feedback)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)), guesses.length < maxGuesses && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameboard-row current\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess-display\",\n            children: Array.from({\n              length: 4\n            }, (_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digit-cell current\",\n              children: currentGuess[index] || ''\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-display\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feedback-placeholder\",\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), Array.from({\n          length: emptyRows - (guesses.length < maxGuesses ? 1 : 0)\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameboard-row empty\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess-display\",\n            children: Array.from({\n              length: 4\n            }, (_, digitIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digit-cell empty\",\n              children: \"\\xA0\"\n            }, digitIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-display\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feedback-placeholder\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, `empty-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameboard-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Attempts: \", guesses.length, \"/\", maxGuesses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameBoard","guesses","currentGuess","maxGuesses","emptyRows","length","renderFeedback","feedback","dots","i","correct","push","className","fileName","_jsxFileName","lineNumber","columnNumber","wrongPosition","remaining","children","map","guess","index","code","split","digit","digitIndex","Array","from","_","_c","$RefreshReg$"],"sources":["C:/Users/Beej/Documents/Block-Lock/client/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\r\nimport './GameBoard.css';\r\n\r\nconst GameBoard = ({ guesses, currentGuess }) => {\r\n  const maxGuesses = 10;\r\n  const emptyRows = maxGuesses - guesses.length;\r\n\r\n  const renderFeedback = (feedback) => {\r\n    const dots = [];\r\n    \r\n    // Add red dots for correct position\r\n    for (let i = 0; i < feedback.correct; i++) {\r\n      dots.push(<span key={`correct-${i}`} className=\"feedback-dot correct\"></span>);\r\n    }\r\n    \r\n    // Add yellow dots for wrong position\r\n    for (let i = 0; i < feedback.wrongPosition; i++) {\r\n      dots.push(<span key={`wrong-pos-${i}`} className=\"feedback-dot wrong-position\"></span>);\r\n    }\r\n    \r\n    // Add black dots for incorrect\r\n    const remaining = 4 - feedback.correct - feedback.wrongPosition;\r\n    for (let i = 0; i < remaining; i++) {\r\n      dots.push(<span key={`incorrect-${i}`} className=\"feedback-dot incorrect\"></span>);\r\n    }\r\n    \r\n    return dots;\r\n  };\r\n\r\n  return (\r\n    <div className=\"gameboard-container\">\r\n      <div className=\"gameboard\">\r\n        <div className=\"gameboard-header\">\r\n          <div className=\"guess-column\">Guess</div>\r\n          <div className=\"feedback-column\">Feedback</div>\r\n        </div>\r\n        \r\n        <div className=\"gameboard-rows\">\r\n          {/* Previous guesses */}\r\n          {guesses.map((guess, index) => (\r\n            <div key={index} className=\"gameboard-row completed\">\r\n              <div className=\"guess-display\">\r\n                {guess.code.split('').map((digit, digitIndex) => (\r\n                  <span key={digitIndex} className=\"digit-cell\">\r\n                    {digit}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <div className=\"feedback-display\">\r\n                {renderFeedback(guess.feedback)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {/* Current guess row (if there are remaining guesses) */}\r\n          {guesses.length < maxGuesses && (\r\n            <div className=\"gameboard-row current\">\r\n              <div className=\"guess-display\">\r\n                {Array.from({ length: 4 }, (_, index) => (\r\n                  <span key={index} className=\"digit-cell current\">\r\n                    {currentGuess[index] || ''}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <div className=\"feedback-display\">\r\n                <span className=\"feedback-placeholder\">?</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Empty rows */}\r\n          {Array.from({ length: emptyRows - (guesses.length < maxGuesses ? 1 : 0) }, (_, index) => (\r\n            <div key={`empty-${index}`} className=\"gameboard-row empty\">\r\n              <div className=\"guess-display\">\r\n                {Array.from({ length: 4 }, (_, digitIndex) => (\r\n                  <span key={digitIndex} className=\"digit-cell empty\">\r\n                    &nbsp;\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <div className=\"feedback-display\">\r\n                <span className=\"feedback-placeholder\">-</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        <div className=\"gameboard-footer\">\r\n          <p>Attempts: {guesses.length}/{maxGuesses}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}