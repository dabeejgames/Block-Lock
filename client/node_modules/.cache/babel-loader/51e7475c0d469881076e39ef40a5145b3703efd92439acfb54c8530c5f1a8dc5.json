{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beej\\\\Documents\\\\Block-Lock\\\\client\\\\src\\\\components\\\\GameBoard.js\";\nimport React from 'react';\nimport './GameBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = ({\n  guesses,\n  currentGuess,\n  colors,\n  codeLength = 4\n}) => {\n  const maxGuesses = 10;\n  const emptyRows = maxGuesses - guesses.length;\n  const renderFeedback = feedback => {\n    const dots = [];\n    for (let i = 0; i < feedback.correct; i++) {\n      dots.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"feedback-dot correct\"\n      }, `correct-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this));\n    }\n    for (let i = 0; i < feedback.wrongPosition; i++) {\n      dots.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"feedback-dot wrong-position\"\n      }, `wrong-pos-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this));\n    }\n    const remaining = codeLength - feedback.correct - feedback.wrongPosition;\n    for (let i = 0; i < remaining; i++) {\n      dots.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"feedback-dot incorrect\"\n      }, `incorrect-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this));\n    }\n    return dots;\n  };\n  const renderBlock = (color, idx, isCurrent) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `color-block${isCurrent ? ' current' : ''}`,\n    style: {\n      background: color || '#eee',\n      border: color ? '2px solid #333' : '2px dashed #bbb',\n      width: 28,\n      height: 28,\n      borderRadius: '50%',\n      display: 'inline-block',\n      margin: 2\n    },\n    children: color ? '' : /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        opacity: 0.2\n      },\n      children: \"?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this)\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-column\",\n          children: \"Guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-column\",\n          children: \"Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameboard-rows\",\n        children: [guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameboard-row completed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess-display\",\n            children: guess.code.map((color, idx) => renderBlock(color, idx, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-display\",\n            children: renderFeedback(guess.feedback)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)), guesses.length < maxGuesses && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameboard-row current\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess-display\",\n            children: Array.from({\n              length: codeLength\n            }, (_, idx) => renderBlock(currentGuess[idx], idx, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-display\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feedback-placeholder\",\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), Array.from({\n          length: emptyRows - (guesses.length < maxGuesses ? 1 : 0)\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameboard-row empty\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guess-display\",\n            children: Array.from({\n              length: codeLength\n            }, (__, digitIdx) => renderBlock(null, digitIdx, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-display\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feedback-placeholder\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, `empty-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameboard-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Attempts: \", guesses.length, \"/\", maxGuesses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameBoard","guesses","currentGuess","colors","codeLength","maxGuesses","emptyRows","length","renderFeedback","feedback","dots","i","correct","push","className","fileName","_jsxFileName","lineNumber","columnNumber","wrongPosition","remaining","renderBlock","color","idx","isCurrent","style","background","border","width","height","borderRadius","display","margin","children","opacity","map","guess","index","code","Array","from","_","__","digitIdx","_c","$RefreshReg$"],"sources":["C:/Users/Beej/Documents/Block-Lock/client/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\r\nimport './GameBoard.css';\r\n\r\nconst GameBoard = ({ guesses, currentGuess, colors, codeLength = 4 }) => {\r\n  const maxGuesses = 10;\r\n  const emptyRows = maxGuesses - guesses.length;\r\n\r\n  const renderFeedback = (feedback) => {\r\n    const dots = [];\r\n    for (let i = 0; i < feedback.correct; i++) {\r\n      dots.push(<span key={`correct-${i}`} className=\"feedback-dot correct\"></span>);\r\n    }\r\n    for (let i = 0; i < feedback.wrongPosition; i++) {\r\n      dots.push(<span key={`wrong-pos-${i}`} className=\"feedback-dot wrong-position\"></span>);\r\n    }\r\n    const remaining = codeLength - feedback.correct - feedback.wrongPosition;\r\n    for (let i = 0; i < remaining; i++) {\r\n      dots.push(<span key={`incorrect-${i}`} className=\"feedback-dot incorrect\"></span>);\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  const renderBlock = (color, idx, isCurrent) => (\r\n    <span\r\n      key={idx}\r\n      className={`color-block${isCurrent ? ' current' : ''}`}\r\n      style={{\r\n        background: color || '#eee',\r\n        border: color ? '2px solid #333' : '2px dashed #bbb',\r\n        width: 28, height: 28, borderRadius: '50%', display: 'inline-block', margin: 2\r\n      }}\r\n    >\r\n      {color ? '' : <span style={{ opacity: 0.2 }}>?</span>}\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div className=\"gameboard-container\">\r\n      <div className=\"gameboard\">\r\n        <div className=\"gameboard-header\">\r\n          <div className=\"guess-column\">Guess</div>\r\n          <div className=\"feedback-column\">Feedback</div>\r\n        </div>\r\n        <div className=\"gameboard-rows\">\r\n          {/* Previous guesses */}\r\n          {guesses.map((guess, index) => (\r\n            <div key={index} className=\"gameboard-row completed\">\r\n              <div className=\"guess-display\">\r\n                {guess.code.map((color, idx) => renderBlock(color, idx, false))}\r\n              </div>\r\n              <div className=\"feedback-display\">\r\n                {renderFeedback(guess.feedback)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {/* Current guess row */}\r\n          {guesses.length < maxGuesses && (\r\n            <div className=\"gameboard-row current\">\r\n              <div className=\"guess-display\">\r\n                {Array.from({ length: codeLength }, (_, idx) =>\r\n                  renderBlock(currentGuess[idx], idx, true)\r\n                )}\r\n              </div>\r\n              <div className=\"feedback-display\">\r\n                <span className=\"feedback-placeholder\">?</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Empty rows */}\r\n          {Array.from({ length: emptyRows - (guesses.length < maxGuesses ? 1 : 0) }, (_, index) => (\r\n            <div key={`empty-${index}`} className=\"gameboard-row empty\">\r\n              <div className=\"guess-display\">\r\n                {Array.from({ length: codeLength }, (__, digitIdx) =>\r\n                  renderBlock(null, digitIdx, false)\r\n                )}\r\n              </div>\r\n              <div className=\"feedback-display\">\r\n                <span className=\"feedback-placeholder\">-</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"gameboard-footer\">\r\n          <p>Attempts: {guesses.length}/{maxGuesses}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}